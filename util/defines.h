#ifndef DEFINES_H //defines.h
#define DEFINES_H

#define _init_ 0
#define ID 1
#define INT 2
#define REAL 3
#define STR 4
#define _ATRIB_ 5
#define ATRIB 6
#define OPER 7
#define ARITM 8
#define COMMENT 9
#define ERROR 10
#define _eof_ 11
#define END -1

int trans_table[12][19] = 
{/*	L |  D | . | ESPAÃ‡O | TAB | \n |"*//* | _ | EOF | { | } | < | - | OP_R | OP_A | ( | ) | ; | OUTRO |*/
/*init*/ ID, INT, ERROR, _init_, END, _init_, STR, ERROR, _eof_, COMMENT, ERROR, _ATRIB_, ARITM, OPER, ARITM, END, END, END, ERROR,
/*ID*/	ID, ID, ERROR, END, END, END, ERROR, ID, _eof_, COMMENT, ERROR, END, END, END, END, END, END, END, ERROR,
/*INT*/ ERROR, INT, REAL, END, END, END, ERROR, ERROR, _eof_, COMMENT, ERROR, END, END, END, END, ERROR, END, END, ERROR,
/*REAL*/ ERROR, REAL, ERROR, END, END, END, ERROR, ERROR, _eof_, COMMENT, ERROR, END, END, END, END, ERROR, ERROR, END, ERROR,
/*STR*/	STR, STR, STR, STR, STR, STR, END, STR, ERROR, STR, STR, STR, STR, STR, STR, STR, STR, STR, STR,
/*_ATRIB_*/ END, END, ERROR, END, END, END, ERROR, ERROR, _eof_, COMMENT, ERROR, ERROR, ATRIB, END, ERROR, END, END, END, ERROR,
/*ATRIB*/ END, END, ERROR, END, END, END, END, ERROR, _eof_, COMMENT, ERROR, ERROR, ERROR, ERROR, ERROR, END, ERROR, END, ERROR,
/*OPER*/ END, END, ERROR, END, END, END, ERROR, ERROR, _eof_, COMMENT, ERROR, ERROR, ERROR, OPER, ERROR, END, ERROR, ERROR, ERROR,
/*ARITM*/ END, END, ERROR, END, END, END, ERROR, ERROR, _eof_, COMMENT, ERROR, ERROR, ERROR, ERROR, ERROR, END, END, END, ERROR,
/*COMMENT*/ COMMENT, COMMENT, COMMENT, COMMENT, COMMENT, COMMENT, COMMENT, COMMENT, ERROR, COMMENT, END, COMMENT, COMMENT, COMMENT, COMMENT, COMMENT, COMMENT, COMMENT , COMMENT,
/*ERROR*/ END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
/*EOF*/  END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END, END,
};


#endif
